name: Validate Tool Registry

on:
  pull_request:
    paths:
      - '.chezmoidata.yaml'
  push:
    paths:
      - '.chezmoidata.yaml'
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup tools
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
      
      - name: Validate registry structure
        run: |
          echo "## Registry Validation" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          errors=0
          
          # Check required fields for each tool
          for tool in $(yq '.tools | keys | .[]' .chezmoidata.yaml); do
            echo "Validating $tool..."
            
            # Required fields
            for field in type version description; do
              value=$(yq ".tools.${tool}.${field}" .chezmoidata.yaml)
              if [ "$value" = "null" ] || [ -z "$value" ]; then
                echo "❌ $tool: missing required field '$field'" | tee -a $GITHUB_STEP_SUMMARY
                errors=$((errors + 1))
              fi
            done
            
            # Type-specific fields
            type=$(yq ".tools.${tool}.type" .chezmoidata.yaml)
            case "$type" in
              github)
                if [ "$(yq ".tools.${tool}.repo" .chezmoidata.yaml)" = "null" ]; then
                  echo "❌ $tool: missing 'repo' field for github type" | tee -a $GITHUB_STEP_SUMMARY
                  errors=$((errors + 1))
                fi
                ;;
              npm)
                if [ "$(yq ".tools.${tool}.package" .chezmoidata.yaml)" = "null" ]; then
                  echo "❌ $tool: missing 'package' field for npm type" | tee -a $GITHUB_STEP_SUMMARY
                  errors=$((errors + 1))
                fi
                ;;
              manual)
                # Manual type doesn't require repo or package fields
                ;;
              *)
                echo "❌ $tool: unknown type '$type'" | tee -a $GITHUB_STEP_SUMMARY
                errors=$((errors + 1))
                ;;
            esac
            
            # Validate version pattern if specified
            pattern=$(yq ".tools.${tool}.pattern" .chezmoidata.yaml)
            version=$(yq ".tools.${tool}.version" .chezmoidata.yaml)
            if [ "$pattern" != "null" ] && [ "$version" != "null" ]; then
              if ! echo "$version" | grep -qE "$pattern"; then
                echo "❌ $tool: version '$version' doesn't match pattern '$pattern'" | tee -a $GITHUB_STEP_SUMMARY
                errors=$((errors + 1))
              fi
            fi
          done
          
          if [ $errors -eq 0 ]; then
            echo "✅ All validations passed!" | tee -a $GITHUB_STEP_SUMMARY
          else
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Total errors: $errors**" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
