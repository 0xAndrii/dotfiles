name: Test Installation

on:
  pull_request:
    paths:
      - '.chezmoiscripts/**'
      - '.chezmoidata.yaml'
      - '.chezmoi.toml.tmpl'
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.runner }}
    
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            runner: ubuntu-latest
          - os: ubuntu-22.04
            runner: ubuntu-22.04
          - os: debian-12
            runner: ubuntu-latest
            container: debian:12
      fail-fast: false
    
    container: ${{ matrix.container }}

    steps:
      - name: Install prerequisites (Debian)
        if: matrix.container == 'debian:12'
        run: |
          apt-get update
          apt-get install -y curl git sudo ca-certificates build-essential unzip bash xz-utils
          # Create a non-root user for testing
          useradd -m -s /bin/bash testuser
          echo "testuser ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/testuser
          # Set git safe directory for testuser
          su - testuser -c "git config --global --add safe.directory '*'"

      - name: Test installation
        run: |
          # Install chezmoi and apply dotfiles
          if [ -n "${{ matrix.container }}" ]; then
            echo "Running in container environment"
            # In container, run as testuser
            su - testuser -c 'curl -fsLS get.chezmoi.io | sh -s -- -b $HOME/.local/bin'
            su - testuser -c '$HOME/.local/bin/chezmoi init --apply 0xAndrii --promptString email=test@example.com --promptString name="Test User"'
          else
            echo "Running on regular runner"
            # On regular runners
            curl -fsLS get.chezmoi.io | sh -s -- -b $HOME/.local/bin
            $HOME/.local/bin/chezmoi init --apply 0xAndrii --promptString email=test@example.com --promptString name="Test User"
          fi

      - name: Verify tools
        run: |
          # Determine user home
          if [ -n "${{ matrix.container }}" ]; then
            USER_HOME="/home/testuser"
            RUN_AS="su - testuser -c"
          else
            USER_HOME="$HOME"
            RUN_AS="bash -c"
          fi
          
          # Check each tool
          echo "Checking installed tools..."
          
          for cmd in hx rg eza dust zellij ruff uv; do
            if $RUN_AS "PATH=$USER_HOME/.local/bin:\$PATH command -v $cmd" &>/dev/null; then
              echo "✓ $cmd: found"
            else
              echo "✗ $cmd: not found"
              exit 1
            fi
          done

      - name: Test basic commands
        run: |
          # Determine user home
          if [ -n "${{ matrix.container }}" ]; then
            USER_HOME="/home/testuser"
            RUN_AS="su - testuser -c"
          else
            USER_HOME="$HOME"
            RUN_AS="bash -c"
          fi
          
          # Test basic functionality
          echo "Testing basic commands..."
          $RUN_AS "PATH=$USER_HOME/.local/bin:\$PATH rg --version"
          $RUN_AS "PATH=$USER_HOME/.local/bin:\$PATH eza --version"
          $RUN_AS "PATH=$USER_HOME/.local/bin:\$PATH dust --version"
          
          # Verify configs exist
          [ -f "$USER_HOME/.bashrc" ] && echo "✓ .bashrc exists"
          [ -f "$USER_HOME/.gitconfig" ] && echo "✓ .gitconfig exists"
          [ -d "$USER_HOME/.config/helix" ] && echo "✓ Helix config exists"